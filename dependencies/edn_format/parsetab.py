
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionsCHAR DISCARD_TAG FLOAT HEX_INTEGER INTEGER KEYWORD LIST_END LIST_START MAP_OR_SET_END MAP_START RATIO SET_START STRING SYMBOL TAG VECTOR_END VECTOR_START WHITESPACEterm : CHAR\n            | STRING\n            | HEX_INTEGER\n            | INTEGER\n            | FLOAT\n            | KEYWORD\n            | SYMBOL\n            | RATIO\n            | WHITESPACEvector : VECTOR_START expressions VECTOR_ENDlist : LIST_START expressions LIST_ENDset : SET_START expressions MAP_OR_SET_ENDmap : MAP_START expressions MAP_OR_SET_ENDdiscarded_expressions : DISCARD_TAG expression discarded_expressions\n                             |expressions : expression expressionsexpressions : discarded_expressionsexpression : vector\n                  | list\n                  | set\n                  | map\n                  | termexpression : DISCARD_TAG expression expressionexpression : TAG expression'
    
_lr_action_items = {'RATIO':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[12,-5,-3,12,-22,-2,12,-7,-4,-18,-21,-8,-19,12,12,-9,-1,-6,12,12,-20,12,12,-24,12,12,-11,-10,-23,-13,-12,]),'HEX_INTEGER':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[2,-5,-3,2,-22,-2,2,-7,-4,-18,-21,-8,-19,2,2,-9,-1,-6,2,2,-20,2,2,-24,2,2,-11,-10,-23,-13,-12,]),'DISCARD_TAG':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[16,-5,-3,24,-22,-2,16,-7,-4,-18,-21,-8,-19,16,24,-9,-1,-6,16,16,-20,16,24,-24,16,24,-11,-10,-23,-13,-12,]),'TAG':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[3,-5,-3,3,-22,-2,3,-7,-4,-18,-21,-8,-19,3,3,-9,-1,-6,3,3,-20,3,3,-24,3,3,-11,-10,-23,-13,-12,]),'VECTOR_START':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[15,-5,-3,15,-22,-2,15,-7,-4,-18,-21,-8,-19,15,15,-9,-1,-6,15,15,-20,15,15,-24,15,15,-11,-10,-23,-13,-12,]),'MAP_OR_SET_END':([1,2,4,5,7,9,10,11,12,13,14,17,18,19,20,21,22,23,25,28,29,30,31,33,34,35,36,37,38,],[-5,-3,-22,-2,-7,-4,-18,-21,-8,-19,-17,-9,-1,-6,-15,-15,-20,-15,-24,-15,37,-16,38,-11,-10,-14,-23,-13,-12,]),'$end':([0,1,2,4,5,7,8,9,10,11,12,13,14,17,18,19,21,22,25,28,30,33,34,35,36,37,38,],[-15,-5,-3,-22,-2,-7,0,-4,-18,-21,-8,-19,-17,-9,-1,-6,-15,-20,-24,-15,-16,-11,-10,-14,-23,-13,-12,]),'WHITESPACE':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[17,-5,-3,17,-22,-2,17,-7,-4,-18,-21,-8,-19,17,17,-9,-1,-6,17,17,-20,17,17,-24,17,17,-11,-10,-23,-13,-12,]),'CHAR':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[18,-5,-3,18,-22,-2,18,-7,-4,-18,-21,-8,-19,18,18,-9,-1,-6,18,18,-20,18,18,-24,18,18,-11,-10,-23,-13,-12,]),'KEYWORD':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[19,-5,-3,19,-22,-2,19,-7,-4,-18,-21,-8,-19,19,19,-9,-1,-6,19,19,-20,19,19,-24,19,19,-11,-10,-23,-13,-12,]),'STRING':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[5,-5,-3,5,-22,-2,5,-7,-4,-18,-21,-8,-19,5,5,-9,-1,-6,5,5,-20,5,5,-24,5,5,-11,-10,-23,-13,-12,]),'MAP_START':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[20,-5,-3,20,-22,-2,20,-7,-4,-18,-21,-8,-19,20,20,-9,-1,-6,20,20,-20,20,20,-24,20,20,-11,-10,-23,-13,-12,]),'LIST_START':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[6,-5,-3,6,-22,-2,6,-7,-4,-18,-21,-8,-19,6,6,-9,-1,-6,6,6,-20,6,6,-24,6,6,-11,-10,-23,-13,-12,]),'SYMBOL':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[7,-5,-3,7,-22,-2,7,-7,-4,-18,-21,-8,-19,7,7,-9,-1,-6,7,7,-20,7,7,-24,7,7,-11,-10,-23,-13,-12,]),'FLOAT':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[1,-5,-3,1,-22,-2,1,-7,-4,-18,-21,-8,-19,1,1,-9,-1,-6,1,1,-20,1,1,-24,1,1,-11,-10,-23,-13,-12,]),'SET_START':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[23,-5,-3,23,-22,-2,23,-7,-4,-18,-21,-8,-19,23,23,-9,-1,-6,23,23,-20,23,23,-24,23,23,-11,-10,-23,-13,-12,]),'VECTOR_END':([1,2,4,5,7,9,10,11,12,13,14,15,17,18,19,21,22,25,27,28,30,33,34,35,36,37,38,],[-5,-3,-22,-2,-7,-4,-18,-21,-8,-19,-17,-15,-9,-1,-6,-15,-20,-24,34,-15,-16,-11,-10,-14,-23,-13,-12,]),'INTEGER':([0,1,2,3,4,5,6,7,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,28,32,33,34,36,37,38,],[9,-5,-3,9,-22,-2,9,-7,-4,-18,-21,-8,-19,9,9,-9,-1,-6,9,9,-20,9,9,-24,9,9,-11,-10,-23,-13,-12,]),'LIST_END':([1,2,4,5,6,7,9,10,11,12,13,14,17,18,19,21,22,25,26,28,30,33,34,35,36,37,38,],[-5,-3,-22,-2,-15,-7,-4,-18,-21,-8,-19,-17,-9,-1,-6,-15,-20,-24,33,-15,-16,-11,-10,-14,-23,-13,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'map':([0,3,6,15,16,20,21,23,24,28,32,],[11,11,11,11,11,11,11,11,11,11,11,]),'term':([0,3,6,15,16,20,21,23,24,28,32,],[4,4,4,4,4,4,4,4,4,4,4,]),'list':([0,3,6,15,16,20,21,23,24,28,32,],[13,13,13,13,13,13,13,13,13,13,13,]),'discarded_expressions':([0,6,15,20,21,23,28,],[14,14,14,14,14,14,35,]),'set':([0,3,6,15,16,20,21,23,24,28,32,],[22,22,22,22,22,22,22,22,22,22,22,]),'expressions':([0,6,15,20,21,23,],[8,26,27,29,30,31,]),'vector':([0,3,6,15,16,20,21,23,24,28,32,],[10,10,10,10,10,10,10,10,10,10,10,]),'expression':([0,3,6,15,16,20,21,23,24,28,32,],[21,25,21,21,28,21,21,21,32,36,36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expressions","S'",1,None,None,None),
  ('term -> CHAR','term',1,'p_term_leaf','edn_parse.py',78),
  ('term -> STRING','term',1,'p_term_leaf','edn_parse.py',79),
  ('term -> HEX_INTEGER','term',1,'p_term_leaf','edn_parse.py',80),
  ('term -> INTEGER','term',1,'p_term_leaf','edn_parse.py',81),
  ('term -> FLOAT','term',1,'p_term_leaf','edn_parse.py',82),
  ('term -> KEYWORD','term',1,'p_term_leaf','edn_parse.py',83),
  ('term -> SYMBOL','term',1,'p_term_leaf','edn_parse.py',84),
  ('term -> RATIO','term',1,'p_term_leaf','edn_parse.py',85),
  ('term -> WHITESPACE','term',1,'p_term_leaf','edn_parse.py',86),
  ('vector -> VECTOR_START expressions VECTOR_END','vector',3,'p_vector','edn_parse.py',91),
  ('list -> LIST_START expressions LIST_END','list',3,'p_list','edn_parse.py',96),
  ('set -> SET_START expressions MAP_OR_SET_END','set',3,'p_set','edn_parse.py',101),
  ('map -> MAP_START expressions MAP_OR_SET_END','map',3,'p_map','edn_parse.py',106),
  ('discarded_expressions -> DISCARD_TAG expression discarded_expressions','discarded_expressions',3,'p_discarded_expressions','edn_parse.py',115),
  ('discarded_expressions -> <empty>','discarded_expressions',0,'p_discarded_expressions','edn_parse.py',116),
  ('expressions -> expression expressions','expressions',2,'p_expressions_expression_expressions','edn_parse.py',121),
  ('expressions -> discarded_expressions','expressions',1,'p_expressions_empty','edn_parse.py',127),
  ('expression -> vector','expression',1,'p_expression','edn_parse.py',132),
  ('expression -> list','expression',1,'p_expression','edn_parse.py',133),
  ('expression -> set','expression',1,'p_expression','edn_parse.py',134),
  ('expression -> map','expression',1,'p_expression','edn_parse.py',135),
  ('expression -> term','expression',1,'p_expression','edn_parse.py',136),
  ('expression -> DISCARD_TAG expression expression','expression',3,'p_expression_discard_expression_expression','edn_parse.py',141),
  ('expression -> TAG expression','expression',2,'p_expression_tagged_element','edn_parse.py',146),
]
